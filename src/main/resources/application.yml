server:
  port: 6789
spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: cloud-api-sample
  docker:
    compose:
      enabled: true
      file: ./docker/docker-compose.yml
      lifecycle-management: start_and_stop
      readiness:
        tcp:
          connect-timeout: 10s
          read-timeout: 5s
  datasource:
    druid:
      enable: true
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://127.0.0.1:3306/cloud_sample?useSSL=false&allowPublicKeyRetrieval=true
      username: dji
      password: dji2023
      initial-size: 10
      min-idle: 10
      max-active: 20
      max-wait: 60000
  data:
    redis:
      host: 127.0.0.1
      port: 6379
      database: 0
      username: # if you enable
      password: dji2023
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  servlet:
    multipart:
      max-file-size: 2GB
      max-request-size: 2GB

jwt:
  issuer: DJI
  subject: CloudApiSample
  secret: CloudApiSample
  age: 86400

mqtt:
  # @see com.dji.sample.component.mqtt.model.MqttUseEnum
  # BASIC parameters are required.
  BASIC:
    protocol: MQTT # @see com.dji.sample.component.mqtt.model.MqttProtocolEnum
    host: Please enter your ip.
    port: 1883
    username: JavaServer
    password: 123456
    client-id: 123456
    # If the protocol is ws/wss, this value is required.
    path:
  DRC:
    protocol: WS # @see com.dji.sample.component.mqtt.model.MqttProtocolEnum
    host: Please enter your ip.
    port: 8083
    path: /mqtt
    username: JavaServer
    password: 123456

cloud-sdk:
  mqtt:
    # Topics that need to be subscribed when initially connecting to mqtt, multiple topics are divided by ",".
    inbound-topic: sys/product/+/status,thing/product/+/requests

url:
  manage:
    prefix: manage
    version: /api/v1
  map:
    prefix: map
    version: /api/v1
  media:
    prefix: media
    version: /api/v1
  wayline:
    prefix: wayline
    version: /api/v1
  storage:
    prefix: storage
    version: /api/v1
  control:
    prefix: control
    version: /api/v1

oss:
  enable: true
  provider: minio
  endpoint: http://127.0.0.1:9000
  access-key: minioadmin2023
  secret-key: minioadmin2023
  bucket: cloud-bucket
  expire: 3600
  object-dir-prefix: wayline

# Tutorial: https://www.alibabacloud.com/help/en/object-storage-service/latest/use-a-temporary-credential-provided-by-sts-to-access-oss
#oss:
#  enable: false
#  provider: ALIYUN # @see com.dji.sample.component.OssConfiguration.model.enums.OssTypeEnum
#  endpoint: https://oss-cn-hangzhou.aliyuncs.com
#  access-key: Please enter your access key.
#  secret-key: Please enter your secret key.
#  expire: 3600
#  region: Please enter your oss region. # cn-hangzhou
#  role-session-name: cloudApi
#  role-arn: Please enter your role arn. # acs:ram::123456789:role/stsrole
#  bucket: Please enter your bucket name.
#  object-dir-prefix: Please enter a folder name.

#oss:
#  enable: true
#  provider: aws
#  endpoint: https://s3.us-east-1.amazonaws.com
#  access-key:
#  secret-key:
#  expire: 3600
#  region: us-east-1
#  role-session-name: cloudApi
#  role-arn:
#  bucket: cloudapi-bucket
#  object-dir-prefix: wayline

#oss:
#  enable: true
#  provider: minio
#  endpoint: http://192.168.1.1:9000
#  access-key: minioadmin
#  secret-key: minioadmin
#  bucket: cloud-bucket
#  expire: 3600
#  region: us-east-1
#  object-dir-prefix: wayline

logging:
  level:
    com.dji: debug
  file:
    name: logs/cloud-api-sample.log

ntp:
  server:
    host: Google.mzr.me

# To create a license for an application: https://developer.dji.com/user/apps/#all
cloud-api:
  app:
    id: Please enter the app id.
    key: Please enter the app key.
    license: Please enter the app license.

springdoc:
  default-flat-param-object: false
  default-support-form-data: true
  default-produces-media-type: application/json
